version: v1beta
variable:
  video:
    title: Video File
    type: video
component:
  extract-audio:
    type: video
    task: TASK_EXTRACT_AUDIO
    input:
      video: ${variable.video}
  audio-vad:
    type: audio
    input:
      audio: ${extract-audio.output.audio}
      min-silence-duration: 1000
      speech-pad: 500
    task: TASK_DETECT_ACTIVITY
  audio-segmentation:
    type: audio
    input:
      audio: ${extract-audio.output.audio}
      segments: ${audio-vad.output.segments}
    task: TASK_SEGMENT
  process-segments:
    type: iterator
    range:
      start: 0
      stop: ${audio-segmentation.output.audio-segments:length}
    component:
      transcribe-segment:
        type: openai
        task: TASK_SPEECH_RECOGNITION
        input:
          model: whisper-1
          audio: ${audio-segmentation.output.audio-segments[i]}
          temperature: 0
        setup:
          api-key: ${secret.openai}
      process-transcription-segment:
        type: openai
        task: TASK_TEXT_GENERATION
        input:
          model: gpt-4o-mini
          n: 1
          prompt: |-
            Enhance the provided audio transcription generated by an AI model.

            **Audio Transcription**:
            ```
            ${transcribe-segment.output.text}
            ```

            **Time Stamp**:
            ```
            ${audio-vad.output.segments[i]} seconds
            ```

            Output and return the Markdown-formatted enhanced transcript directly, without additional explanations:
          response-format:
            type: text
          system-message: "You are an expert transcription assistant specializing in refining AI-generated audio transcriptions. Follow these step-by-step instructions to ensure the output is accurate, consistent, and well-formatted:\n\n1. **Analyze the Input**: Start by carefully reviewing the provided transcription and associated timestamp.\n\n2. **Eliminate Duplications**: Identify and remove any repeated words or phrases that may result from hallucinations.\n\n3. **Translate Non-English Text**: If any part of the transcription is not in English, accurately translate it into English while preserving its original meaning and context.\n\n4. **Apply Punctuation**: Add appropriate punctuation to ensure the transcription is grammatically correct and easy to read.\n\n5. **Ensure Complete Timestamps**: \n    - Include both the start and end times for each transcription segment. \n    - Format the timestamp as a markdown sub-heading: `### Timestamp: <start time> - <end time> seconds`.\n    - Ensure the time units (`seconds`) are explicitly stated.\n\n6. **Match Text with Timestamps**:\n    - Ensure that the timestamp sub-heading is followed by its corresponding transcription text.\n    - If a segment is empty or nonsensical, clearly mark it as `[No transcription available]` instead of leaving it blank.\n    - If the segment only contains a single word that is not very useful (e.g. \"you\"), clearly mark it as `[No transcription available]`.\n\n7. **Format in Markdown**: Structure the final transcription using Markdown:\n    - Use `###` for the timestamp heading.\n    - Ensure consistent formatting across all sections.\n\n8. **Check for Completeness**: Verify that:\n    - The corresponding text.\n    - The transcription is in English.\n    - The output is free of duplicated or empty segments.\n\nApproach each task step by step, reasoning carefully before proceeding to the next. Your goal is to produce a professional, accurate transcription in Markdown format that is easy to read and consistent."
          temperature: 0
          top-p: 1
        setup:
          api-key: ${secret.openai}
    output-elements:
      result: ${process-transcription-segment.output.texts[0]}
  merge-segment-transcripts:
    type: json
    input:
      json-value: ${process-segments.output.result}
      jq-filter: join("\n\n")
    task: TASK_JQ
  extract-frames:
    type: video
    task: TASK_EXTRACT_FRAMES
    input:
      video: ${variable.video}
      interval: 4
  batch-frames:
    type: collection
    task: TASK_SPLIT
    input:
      data: ${extract-frames.output.frames}
      size: 4
  process-frames:
    type: iterator
    range:
      start: 0
      stop: ${batch-frames.output.data:length}
    component:
      frame-to-markdown:
        type: openai
        task: TASK_TEXT_GENERATION
        input:
          images: ${batch-frames.output.data[i]}
          model: gpt-4o-mini
          n: 1
          prompt: |-
            You are an AI visual assistant trained to analyze frames from a video and generate detailed descriptions in markdown format. I will provide a batch of images/frames, and your task is to carefully examine each one and describe the scenes in a highly detailed, organized manner using markdown formatting.

            For context, you are also provided with the audio transcription from same video.

            **Audio Transcription:**
            ${merge-segment-transcripts.output.results[0]}

            Your Description Should Include:

            1. Overall Summary:
              - Provide a concise summary of what the images depict.

            2. Objects and Entities:
              - Identify all key objects, people, animals, plants, furniture, vehicles, buildings, or other entities from each image, and provide counts for each category.
              - Include detailed descriptions of the appearance, textures, materials, and position of each entity.

            3. Spatial Relationships:
              - Describe where objects are located within the images using terms like "top-left corner," "foreground," or "background."
              - Explain the spatial relationships between objects, such as "the chair is placed next to the table."

            4. Text Extraction:
              - If any text appears in the images, quote it verbatim. Do not include details about the formatting, color, or layout of the text.

            5. Guidelines:
              - Format your entire response using markdown syntax for structure and clarity.
              - Your response should include headers, lists, and other markdown elements to organize the content effectively.
              - Only describe what is directly visible in the images. Do not add details or make inferences beyond the observable content.
          response-format:
            type: text
          system-message: |-
            You are an AI visual assistant tasked with analyzing frames from a video and providing detailed descriptions formatted in markdown. Your response should be well-organized and use markdown headers, lists, and other structural elements to enhance readability.

            Expectations:
            1. Use markdown formatting in your response to organize the description into clear sections, such as "Overall Description," "Key Objects and Entities," "Spatial Relationships," and "Extracted Text."
            2. Include detailed descriptions of all visible objects, entities, and text in the images. Specify their positions, counts, and characteristics.
            3. Quote any visible text verbatim, but do not describe its formatting, color, or layout.

            Restrictions:
            1. Your description must be entirely based on the observable content of the images.
            2. Avoid making assumptions or adding information that cannot be directly verified from the images.

            By following these instructions and using markdown formatting, your response should provide a clear, comprehensive, and structured description of the images.
          temperature: 0
          top-p: 1
        setup:
          api-key: ${secret.openai}
    output-elements:
      result: ${frame-to-markdown.output.texts[0]}
  combine:
    type: openai
    task: TASK_TEXT_GENERATION
    input:
      model: gpt-4o
      prompt: |-
        Here are visual analyses of the frames of the video content representing consecutive 16 second windows.
        **Visual Analyses:**
        ```
        ${process-frames.output.result}
        ```

        Here is the transcribed audio content from the video.
        **Audio Transcript:**
        ```
        ${merge-segment-transcripts.output.results[0]}
        ```

        Combine the visual analyses and audio transcript to produce an enhanced video transcript.
      system-message: You are a helpful assistant.
      temperature: 0
      n: 1
      response-format:
        type: text
      top-p: 1
    setup:
      api-key: ${secret.openai}
output:
  video-transcript:
    title: Video Transcript
    value: ${combine.output.texts[0]}