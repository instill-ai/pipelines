version: v1beta
variable:
  document-input:
    title: Document Input
    description: Upload a document (PDF/DOCX/DOC/PPTX/PPT)
    type: file
component:
  pages-to-images:
    type: document
    task: TASK_CONVERT_TO_IMAGES
    input:
      document: ${variable.document-input}
      resolution: 500
  pages-to-markdown:
    type: document
    task: TASK_CONVERT_TO_MARKDOWN
    input:
      document: ${variable.document-input}
  batch-images:
    type: collection
    input:
      data: ${pages-to-images.output.images}
      size: 2
    task: TASK_SPLIT
  batch-markdown:
    type: collection
    input:
      data: ${pages-to-markdown.output.markdowns}
      size: 2
    task: TASK_SPLIT
    condition: ${pages-to-markdown.output.body} != ""
  vlm-refine-markdown:
    type: iterator
    range:
      start: 0
      stop: ${batch-images.output.data:length}
    component:
      merge-batch-markdown:
        type: json
        input:
          json-value: ${batch-markdown.output.data[i]}
          jq-filter: join("\n")
        task: TASK_JQ
      refine-markdown:
        type: openai
        task: TASK_TEXT_GENERATION
        input:
          model: gpt-4o
          images: ${batch-images.output.data[i]}
          n: 1
          prompt: |-
            Conduct OCR to extract all text from the document images. Follow the guidelines below to enhance and correct the Drafted Markdown content based on these images. Ensure strict alignment with the images and Drafted Markdown Content, making only necessary corrections to improve accuracy and formatting.

            **Drafted Markdown Content**:
            ```
            ${merge-batch-markdown.output.results}
            ```

            **Guidelines**:
            1. **Text and Formatting**: Ensure all informative text and details are included. Correct any errors in the Markdown text (e.g., line break (\n), position, symbol, punctuation, etc.), maintaining proper structure and sentence with appropriate headings and formatting.
            2. **Tables**: Format tables using pipes and dashes, ensuring completeness and alignment.
            3. **Images**: Add descriptions for each image contained in the document, accurately reflecting their content. For diagrams or charts, provide detailed descriptions of elements and data.
            4. **Consistency**: Maintain consistent formatting and terminology throughout. Ensure the document is coherent, especially between heading levels.

            Finally, make sure that the Markdown text contains detailed descriptions of each image, diagram or graph.

            Just output the enhanced Markdown text directly, without additional explanations or code block symbols (e.g., ```):
          response-format:
            type: text
          system-message: |-
            Your task is to enhance and revise the provided Markdown text by accurately reflecting the content visible in the document images. Make only the necessary corrections to ensure accuracy, formatting, and completeness, without adding speculative content. Do not remove any text from the Drafted Markdown content.

            **Instructions:**
            1. **Review and Compare**: Carefully examine the details in both the document images and the Drafted Markdown content. Ensure all text from the images is included in your revised Markdown.
            2. **Correct Formatting**: Fix any Markdown formatting errors while preserving all existing text, headings, lists, math formulas (LaTeX), tables, charts and inline formatting.
            3. **Detail Extraction**: Ensure all bullet points, numbered lists, Chinese numbers/lists, and tables are complete and properly formatted. Pay special attention to the beginning of the document (i.e., texts in the beginning of Drafted Markdown Content).
            4. **Image Descriptions**: Add accurate descriptions for all images in detail using Markdown syntax, reflecting the content without assumptions.
            5. **Avoid Omissions**: Do not omit any text from the original document (i.e., drafted markdown content), especially at the beginning of the pages. Ensure all content is extracted for completeness.
            6. **Output Requirements**: Provide the enhanced Markdown text without any code block markers or additional instructions.

            Return only the enhanced/revised Markdown text. Do NOT output any code block symbols (```) and header/footer of each page.
          temperature: 0
          top-p: 0.01
    output-elements:
      result: ${refine-markdown.output.texts[0]}
    condition: ${pages-to-markdown.output.body} != ""
  vlm-document-ocr:
    type: iterator
    range:
      start: 0
      stop: ${batch-images.output.data:length}
    component:
      document-ocr:
        type: openai
        task: TASK_TEXT_GENERATION
        input:
          model: gpt-4o
          images: ${batch-images.output.data[i]}
          n: 1
          prompt: |-
            Use the provided document images to perform OCR and output the extracted text in Markdown format. Structure the content accurately based on headings, paragraphs, lists, tables, and other elements observed in the images. Ensure a high level of faithfulness to the text and layout in the image.

            Requirements:

            1. Text and Structure:
              Extract all visible text accurately.
              Use Markdown to format headings (\# for titles, \## and \### for subtitles), lists, and paragraphs. Ensure consistent indentation for lists and sublists.
              Apply inline formatting like bold or italics where appropriate.
            2. Tables:
              If tables are present, structure them using Markdown syntax, with pipes (|) for columns and dashes (---) for separating headers.
              Ensure all table rows and columns are included, aligning accurately with the images.
            3. Images and Descriptions:
              For any images within the document, include concise descriptions of the content or purpose of the image based on visual cues.
            4. Accuracy and Completeness:
              Extract and include all text elements, including side notes or captions, while maintaining logical flow and organization.
              Avoid omitting any content or adding speculative information.

            Finally, make sure that the Markdown text contains detailed descriptions of each image, diagram or graph.

            Markdown-formatted output:
          response-format:
            type: text
          system-message: |-
            You are an OCR system tasked with accurately extracting and formatting document text from an images into Markdown. Capture all visible text and structure it logically, ensuring the final Markdown format mirrors the original content without additions or omissions.

            Instructions:

            1. Extract text exactly as seen in the images and organize it using Markdown formatting.
            2. Properly structure headings, lists, and paragraphs based on document layout.
            3. Format tables with Markdown syntax, ensuring all rows and columns are represented.
            4. Include alternative text descriptions for any images, focusing on concise summaries.
            5. Return only the extracted and formatted Markdown content, with no additional commentary or code block markers.
          temperature: 0
          top-p: 0.01
    output-elements:
      result: ${document-ocr.output.texts[0]}
    condition: ${pages-to-markdown.output.body} == ""
  merge-markdown-refinement:
    type: json
    input:
      json-value: ${vlm-refine-markdown.output.result}
      jq-filter: join("\n")
    task: TASK_JQ
  merge-markdown-ocr:
    type: json
    input:
      json-value: ${vlm-document-ocr.output.result}
      jq-filter: join("")
    task: TASK_JQ
output:
  convert_result:
    title: convert-result
    value: ${merge-markdown-refinement.output.results[0]}
  convert_result2:
    title: convert-result2
    value: ${merge-markdown-ocr.output.results[0]}